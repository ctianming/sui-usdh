"use client";
import { useState, useEffect, useRef } from 'react';
import Navbar from '@/components/Navbar';
import DigitalRain from '@/components/DigitalRain';
import Image from 'next/image';

// 滚动显示动画的自定义钩子
const useScrollReveal = () => {
    useEffect(() => {
        const observerOptions = {
            root: null, // 相对于视口
            rootMargin: '0px',
            threshold: 0.15 // 当元素15%进入视口时触发
        };

        const handleIntersect = (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('revealed');
                    // 一旦元素已经显示，不再观察
                    observer.unobserve(entry.target);
                }
            });
        };

        const observer = new IntersectionObserver(handleIntersect, observerOptions);

        // 获取所有需要动画的元素
        const scrollElements = document.querySelectorAll('.scroll-reveal');
        scrollElements.forEach(el => {
            observer.observe(el);
        });

        // 获取所有阶梯动画容器
        const staggerObserver = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('active');
                    staggerObserver.unobserve(entry.target);
                }
            });
        }, { threshold: 0.1 });

        const staggerContainers = document.querySelectorAll('.stagger-reveal:not(.active)');
        staggerContainers.forEach(el => {
            staggerObserver.observe(el);
        });

        return () => {
            scrollElements.forEach(el => observer.unobserve(el));
            staggerContainers.forEach(el => staggerObserver.unobserve(el));
        };
    }, []);
};

// Section components
const HeroSection = () => {
    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        setIsVisible(true);
    }, []);

    return (
        <section className="relative min-h-screen flex items-center overflow-hidden">
            <div className="absolute inset-0 bg-gradient-to-b from-black to-blue-950/30 z-0"></div>

            {/* 增强动态背景效果 */}
            <div className="absolute inset-0 z-0">
                <div className="relative w-full h-full overflow-hidden">
                    <div className="absolute w-full h-full bg-[radial-gradient(ellipse_at_bottom_right,_var(--tw-gradient-stops))] from-blue-600/20 via-transparent to-transparent animate-pulse-slow"></div>
                    <div className="absolute w-full h-full bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-cyan-400/10 via-transparent to-transparent animate-pulse-slow animation-delay-1000"></div>
                </div>

                {/* 添加网格图案背景 */}
                <div className="absolute inset-0 grid-pattern opacity-10"></div>

                {/* 添加粒子效果 - 使用现有的数字雨组件，但降低不透明度 */}
                <div className="absolute inset-0 opacity-5">
                    <DigitalRain />
                </div>
            </div>

            {/* 增强的浮动元素 */}
            <div className="absolute inset-0 z-0 pointer-events-none overflow-hidden">
                <div className="absolute h-64 w-64 rounded-full bg-gradient-to-r from-blue-500/5 to-cyan-400/5 blur-3xl -top-10 -right-10 animate-float"></div>
                <div className="absolute h-96 w-96 rounded-full bg-gradient-to-r from-indigo-500/5 to-purple-400/5 blur-3xl -bottom-20 -left-20 animate-float animation-delay-1000"></div>
                <div className="absolute h-32 w-32 rounded-full border border-blue-500/10 top-1/4 right-1/4 animate-float animation-delay-2000"></div>
                <div className="absolute h-16 w-16 rounded-full border border-cyan-500/20 bottom-1/3 left-1/3 animate-float animation-delay-3000"></div>

                {/* 添加更多浮动元素 */}
                <div className="absolute h-48 w-48 rounded-full bg-gradient-to-r from-purple-500/5 to-pink-400/5 blur-2xl top-1/3 right-1/3 animate-float animation-delay-4000"></div>
                <div className="absolute h-24 w-24 rounded-full border border-indigo-500/15 bottom-1/4 right-1/4 animate-float animation-delay-2000"></div>
            </div>

            <div className="container mx-auto px-6 z-10">
                <div className={`max-w-4xl transition-all duration-1000 transform ${isVisible ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'}`}>
                    <h1 className="text-5xl md:text-7xl font-bold mb-6 text-gradient-hero relative">
                        <span className="relative inline-block">
                            USDH: BACKED BY REAL
                            <span className="absolute -inset-1 bg-blue-500/10 blur-xl z-[-1]"></span>
                        </span>
                        <br />
                        <span className="relative inline-block mt-2">
                            COMPUTE POWER
                            <span className="absolute -inset-1 bg-purple-500/10 blur-xl z-[-1]"></span>
                        </span>
                    </h1>
                    <p className="text-xl md:text-2xl mb-10 text-gray-300">
                        The world's first stablecoin collateralized by distributed computing resources,
                        creating a new paradigm in digital assets
                    </p>
                    <div className="flex flex-wrap gap-4">
                        <a href="#about" className="btn-primary group border-breath">
                            LEARN MORE
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2 transition-transform group-hover:translate-y-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                            </svg>
                        </a>
                        <a href="#" className="btn-secondary shimmer">
                            WHITEPAPER
                        </a>
                    </div>
                </div>
            </div>

            {/* 优化滚动指示器 */}
            <div className="absolute bottom-10 left-1/2 transform -translate-x-1/2 flex flex-col items-center text-gray-500">
                <div className="scroll-indicator">
                    <div className="mouse"></div>
                </div>
            </div>
        </section>
    )
};

const MetricsSection = () => {
    const [counters, setCounters] = useState({
        supply: 0,
        ratio: 0,
        nodes: 0
    });

    const targetValues = {
        supply: 148243,
        ratio: 172,
        nodes: 2437
    };

    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        // Animate counter values when section is visible
        const observer = new IntersectionObserver(
            (entries) => {
                if (entries[0].isIntersecting) {
                    setIsVisible(true);

                    const duration = 2000; // Animation duration in ms
                    const steps = 60; // Total animation steps
                    const interval = duration / steps;

                    let currentStep = 0;

                    const timer = setInterval(() => {
                        currentStep++;
                        const progress = currentStep / steps;

                        setCounters({
                            supply: Math.floor(targetValues.supply * progress),
                            ratio: Math.floor(targetValues.ratio * progress),
                            nodes: Math.floor(targetValues.nodes * progress)
                        });

                        if (currentStep >= steps) {
                            clearInterval(timer);
                            setCounters(targetValues);
                        }
                    }, interval);
                }
            },
            { threshold: 0.3 }
        );

        const section = document.getElementById('metrics-section');
        if (section) {
            observer.observe(section);
        }

        return () => {
            if (section) {
                observer.unobserve(section);
            }
        };
    }, []);

    return (
        <section id="metrics-section" className="py-20 bg-gradient-to-b from-blue-950/30 to-black relative overflow-hidden">
            {/* 背景装饰元素 */}
            <div className="absolute inset-0 pointer-events-none">
                <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-blue-500/20 to-transparent"></div>
                <div className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-blue-500/20 to-transparent"></div>
                <div className="absolute -left-20 top-1/2 transform -translate-y-1/2 w-40 h-40 rounded-full bg-blue-500/5 blur-3xl"></div>
                <div className="absolute -right-20 top-1/3 w-60 h-60 rounded-full bg-indigo-500/5 blur-3xl"></div>
            </div>

            <div className="container mx-auto px-6 relative z-10">
                <div className="max-w-4xl mx-auto mb-12">
                    <h2 className="text-3xl md:text-4xl font-bold mb-4 text-center text-gradient">KEY METRICS</h2>
                    <p className="text-center text-gray-400">Real-time statistics of the USDH ecosystem</p>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                    <div className={`data-card transform transition-all duration-500 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`} style={{ transitionDelay: '0ms' }}>
                        <div className="flex justify-between items-center mb-3">
                            <h3 className="text-gray-300 text-sm font-medium uppercase tracking-wider">TOTAL SUPPLY</h3>
                            <div className="bg-green-500/20 text-green-400 text-xs py-1 px-2 rounded-full flex items-center breath-glow">
                                <svg xmlns="http://www.w3.org/2000/svg" className="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 10l7-7m0 0l7 7m-7-7v18" />
                                </svg>
                                +2.5% 24h
                            </div>
                        </div>
                        <div className="data-value mb-4">{counters.supply.toLocaleString()} USDH</div>
                        <div className="h-1.5 w-full bg-gray-800/70 rounded-full overflow-hidden mb-2">
                            <div className="h-full bg-gradient-to-r from-blue-500 to-cyan-400 rounded-full shimmer" style={{ width: '72%' }}></div>
                        </div>
                        <div className="text-xs text-gray-500 text-right">72% of capacity</div>
                    </div>

                    <div className={`data-card transform transition-all duration-500 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`} style={{ transitionDelay: '150ms' }}>
                        <div className="flex justify-between items-center mb-3">
                            <h3 className="text-gray-300 text-sm font-medium uppercase tracking-wider">COLLATERAL RATIO</h3>
                            <div className="bg-blue-500/20 text-blue-400 text-xs py-1 px-2 rounded-full flex items-center breath-glow">
                                <span className="inline-block w-2 h-2 bg-blue-500 rounded-full mr-1 pulse-effect"></span>
                                Healthy
                            </div>
                        </div>
                        <div className="data-value mb-4">{counters.ratio}%</div>
                        <div className="flex items-center mb-2">
                            <div className="h-1.5 w-full bg-gray-800/70 rounded-full overflow-hidden mr-4">
                                <div className="h-full bg-gradient-to-r from-cyan-500 to-blue-400 shimmer" style={{ width: '82%' }}></div>
                            </div>
                        </div>
                        <div className="flex justify-between items-center text-xs">
                            <span className="text-gray-500">Min Threshold: 150%</span>
                            <span className="text-cyan-400">+22%</span>
                        </div>
                    </div>

                    <div className={`data-card transform transition-all duration-500 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`} style={{ transitionDelay: '300ms' }}>
                        <div className="flex justify-between items-center mb-3">
                            <h3 className="text-gray-300 text-sm font-medium uppercase tracking-wider">NODE COUNT</h3>
                            <div className="bg-purple-500/20 text-purple-400 text-xs py-1 px-2 rounded-full breath-glow">28 Countries</div>
                        </div>
                        <div className="data-value mb-4">{counters.nodes.toLocaleString()}</div>
                        <div className="flex items-center space-x-1 mb-2">
                            <div className="h-2 flex-grow rounded-full bg-blue-500/70 shimmer"></div>
                            <div className="h-2 flex-grow rounded-full bg-cyan-500/70 shimmer" style={{ animationDelay: '0.5s' }}></div>
                            <div className="h-2 flex-grow rounded-full bg-indigo-500/70 shimmer" style={{ animationDelay: '1s' }}></div>
                            <div className="h-2 flex-grow rounded-full bg-purple-500/70 shimmer" style={{ animationDelay: '1.5s' }}></div>
                            <div className="h-2 flex-grow rounded-full bg-gray-700/70"></div>
                        </div>
                        <div className="text-xs text-gray-500 text-right">82% network growth</div>
                    </div>
                </div>
            </div>
        </section>
    )
};

const AboutSection = () => (
    <section id="about" className="py-24 bg-gradient-to-b from-black to-blue-950/20 relative overflow-hidden">
        {/* 背景装饰 */}
        <div className="absolute right-0 top-0 w-1/2 h-1/2 bg-gradient-to-b from-blue-500/5 to-transparent opacity-40"></div>
        <div className="absolute left-0 bottom-0 w-1/2 h-1/2 bg-gradient-to-t from-indigo-500/5 to-transparent opacity-40"></div>
        <div className="absolute inset-0 bg-grid opacity-10"></div>

        <div className="container mx-auto px-6 relative z-10">
            <div className="mb-16 relative scroll-reveal">
                <div className="absolute -top-10 left-1/2 transform -translate-x-1/2 w-40 h-1 bg-gradient-to-r from-transparent via-blue-500/50 to-transparent"></div>
                <h2 className="text-3xl md:text-5xl font-bold mb-3 text-center text-gradient">ABOUT USDH</h2>
                <p className="text-gray-500 text-center mb-10">A new generation of stable digital currency</p>
            </div>

            <div className="max-w-4xl mx-auto mb-20 relative scroll-reveal">
                <div className="absolute -left-4 top-0 bottom-0 w-1 bg-gradient-to-b from-blue-500/50 via-indigo-500/30 to-transparent"></div>
                <p className="text-xl text-gray-300 mb-8 pl-6">
                    USDH (Hashrate-backed USD) is an innovative stablecoin built on the Sui blockchain
                    that leverages distributed computing resources as its primary collateral.
                </p>
                <p className="text-xl text-gray-300 pl-6">
                    By connecting the growing market of cloud computing with decentralized finance,
                    USDH creates a new class of asset-backed stablecoins with intrinsic utility and value.
                </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-10 stagger-reveal">
                <div className="card-glass-premium p-8 rounded-lg relative group">
                    <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-blue-500/50 to-transparent transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                    <div className="flex justify-center mb-6">
                        <div className="w-16 h-16 rounded-full bg-blue-500/10 flex items-center justify-center breath-glow">
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </div>
                    </div>

                    <h3 className="text-2xl font-bold mb-4 text-center text-blue-400">PRICE STABILITY</h3>
                    <p className="text-gray-300 text-center mb-4">
                        Advanced pegging algorithms and multi-asset reserve management ensure USDH maintains its value
                    </p>
                    <div className="text-center">
                        <span className="inline-block h-0.5 w-12 bg-gradient-to-r from-transparent via-blue-500/50 to-transparent"></span>
                    </div>
                </div>

                <div className="card-glass-premium p-8 rounded-lg relative group">
                    <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-cyan-500/50 to-transparent transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                    <div className="flex justify-center mb-6">
                        <div className="w-16 h-16 rounded-full bg-cyan-500/10 flex items-center justify-center breath-glow">
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-cyan-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                            </svg>
                        </div>
                    </div>

                    <h3 className="text-2xl font-bold mb-4 text-center text-cyan-400">REAL COLLATERAL</h3>
                    <p className="text-gray-300 text-center mb-4">
                        Backed by verifiable computing resources with real-world utility and intrinsic value
                    </p>
                    <div className="text-center">
                        <span className="inline-block h-0.5 w-12 bg-gradient-to-r from-transparent via-cyan-500/50 to-transparent"></span>
                    </div>
                </div>

                <div className="card-glass-premium p-8 rounded-lg relative group">
                    <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-indigo-500/50 to-transparent transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                    <div className="flex justify-center mb-6">
                        <div className="w-16 h-16 rounded-full bg-indigo-500/10 flex items-center justify-center breath-glow">
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                            </svg>
                        </div>
                    </div>

                    <h3 className="text-2xl font-bold mb-4 text-center text-indigo-400">TRANSPARENCY</h3>
                    <p className="text-gray-300 text-center mb-4">
                        Zero-knowledge proofs provide privacy with full verifiability for all transactions
                    </p>
                    <div className="text-center">
                        <span className="inline-block h-0.5 w-12 bg-gradient-to-r from-transparent via-indigo-500/50 to-transparent"></span>
                    </div>
                </div>
            </div>
        </div>
    </section>
);

const PartnersSection = () => {
    const [activeFilter, setActiveFilter] = useState('all');
    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                if (entries[0].isIntersecting) {
                    setIsVisible(true);
                }
            },
            { threshold: 0.3 }
        );

        const section = document.getElementById('partners-section');
        if (section) {
            observer.observe(section);
        }

        return () => {
            if (section) {
                observer.unobserve(section);
            }
        };
    }, []);

    const partners = [
        { name: 'Sui Foundation', category: 'blockchain', logo: '/logos/sui-logo.svg' },
        { name: 'DataCoin', category: 'blockchain', logo: '/logos/datacoin-logo.svg' },
        { name: 'CloudPower', category: 'infrastructure', logo: '/logos/cloudpower-logo.svg' },
        { name: 'Compute Labs', category: 'infrastructure', logo: '/logos/computelabs-logo.svg' },
        { name: 'NodeStream', category: 'infrastructure', logo: '/logos/nodestream-logo.svg' },
        { name: 'FinBlock', category: 'defi', logo: '/logos/finblock-logo.svg' },
    ];

    const filteredPartners = activeFilter === 'all'
        ? partners
        : partners.filter(partner => partner.category === activeFilter);

    return (
        <section id="partners-section" className="py-24 bg-gradient-to-b from-blue-950/20 to-black relative overflow-hidden">
            {/* 背景装饰 */}
            <div className="absolute inset-0 opacity-20">
                <div className="absolute inset-0 grid-pattern opacity-20"></div>
                <div className="absolute -right-20 top-20 w-80 h-80 rounded-full bg-blue-500/5 blur-3xl"></div>
                <div className="absolute -left-20 bottom-20 w-80 h-80 rounded-full bg-indigo-500/5 blur-3xl"></div>
            </div>

            <div className="container mx-auto px-6 relative z-10">
                <div className="mb-16 text-center">
                    <h2 className="text-3xl md:text-5xl font-bold mb-4 text-gradient">Trusted Partners</h2>
                    <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                        USDH collaborates with industry leaders in blockchain, infrastructure, and DeFi to build the future of compute-backed stablecoins.
                    </p>
                </div>

                <div className="flex justify-center mb-12 space-x-2">
                    <button
                        onClick={() => setActiveFilter('all')}
                        className={`px-4 py-2 rounded-full text-sm transition-all duration-300 ${activeFilter === 'all'
                            ? 'bg-blue-500/20 text-blue-300 shadow-glow'
                            : 'bg-gray-800/50 text-gray-400 hover:bg-gray-800'
                            }`}
                    >
                        All Partners
                    </button>
                    <button
                        onClick={() => setActiveFilter('blockchain')}
                        className={`px-4 py-2 rounded-full text-sm transition-all duration-300 ${activeFilter === 'blockchain'
                            ? 'bg-blue-500/20 text-blue-300 shadow-glow'
                            : 'bg-gray-800/50 text-gray-400 hover:bg-gray-800'
                            }`}
                    >
                        Blockchain
                    </button>
                    <button
                        onClick={() => setActiveFilter('infrastructure')}
                        className={`px-4 py-2 rounded-full text-sm transition-all duration-300 ${activeFilter === 'infrastructure'
                            ? 'bg-blue-500/20 text-blue-300 shadow-glow'
                            : 'bg-gray-800/50 text-gray-400 hover:bg-gray-800'
                            }`}
                    >
                        Infrastructure
                    </button>
                    <button
                        onClick={() => setActiveFilter('defi')}
                        className={`px-4 py-2 rounded-full text-sm transition-all duration-300 ${activeFilter === 'defi'
                            ? 'bg-blue-500/20 text-blue-300 shadow-glow'
                            : 'bg-gray-800/50 text-gray-400 hover:bg-gray-800'
                            }`}
                    >
                        DeFi
                    </button>
                </div>

                <div className="grid grid-cols-2 md:grid-cols-3 gap-6">
                    {filteredPartners.map((partner, index) => (
                        <div
                            key={partner.name}
                            className={`
                                card p-6 rounded-lg text-center transform transition-all duration-700 
                                ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}
                                hover:border-blue-500/30 hover:shadow-glow group
                            `}
                            style={{ transitionDelay: `${index * 150}ms` }}
                        >
                            <div className="h-20 flex items-center justify-center mb-4 relative overflow-hidden group-hover:scale-105 transition-transform duration-300">
                                <div className="absolute inset-0 bg-gradient-to-r from-blue-500/10 via-transparent to-indigo-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                                <div className="relative z-10">
                                    {/* Placeholder for partner logo */}
                                    <div className="bg-blue-900/30 w-16 h-16 rounded-full mx-auto flex items-center justify-center border border-blue-500/20">
                                        <span className="text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-indigo-300">
                                            {partner.name.charAt(0)}
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <h3 className="text-lg font-medium text-white mb-2">{partner.name}</h3>
                            <div className="text-xs text-gray-400 uppercase tracking-wider">
                                {partner.category}
                            </div>
                        </div>
                    ))}
                </div>

                <div className="flex justify-center mt-16">
                    <a href="#" className="btn-secondary group relative overflow-hidden px-8">
                        <span className="relative z-10 flex items-center">
                            Become a partner
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2 transition-transform duration-300 group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14 5l7 7m0 0l-7 7m7-7H3" />
                            </svg>
                        </span>
                        <span className="absolute inset-0 bg-gradient-to-r from-indigo-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
                    </a>
                </div>
            </div>
        </section>
    );
};

const HowItWorksSection = () => {
    const [activeLayer, setActiveLayer] = useState(0);
    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                if (entries[0].isIntersecting) {
                    setIsVisible(true);
                }
            },
            { threshold: 0.2 }
        );

        const section = document.getElementById('how-it-works');
        if (section) {
            observer.observe(section);
        }

        return () => {
            if (section) {
                observer.unobserve(section);
            }
        };
    }, []);

    const layers = [
        {
            id: 1,
            name: 'RESOURCE LAYER',
            description: 'Global network of distributed heterogeneous compute nodes providing the fundamental backing for the USDH ecosystem.',
            color: 'blue'
        },
        {
            id: 2,
            name: 'VALIDATION LAYER',
            description: 'Zero-knowledge proofs and resource authenticity verification ensure trustless operations and transparency.',
            color: 'cyan'
        },
        {
            id: 3,
            name: 'PROTOCOL LAYER',
            description: 'On-chain smart contracts, multi-source oracles, and governance mechanisms that regulate the system.',
            color: 'indigo'
        },
        {
            id: 4,
            name: 'APPLICATION LAYER',
            description: 'Fund units, compute market, and financial derivatives built on top of the USDH infrastructure.',
            color: 'purple'
        }
    ];

    return (
        <section id="how-it-works" className="py-24 bg-gradient-to-b from-black to-blue-950/30 relative overflow-hidden">
            {/* 视差背景 */}
            <div className="absolute inset-0 overflow-hidden">
                <div className="parallax">
                    <div className="absolute inset-0 parallax-layer-0">
                        <div className="grid-pattern opacity-15"></div>
                    </div>
                    <div className="absolute w-full h-full parallax-layer-1">
                        <div className="absolute -left-20 top-1/4 w-60 h-60 rounded-full bg-blue-500/5 blur-2xl"></div>
                        <div className="absolute -right-20 bottom-1/4 w-60 h-60 rounded-full bg-indigo-500/5 blur-2xl"></div>
                    </div>
                    <div className="absolute w-full h-full parallax-layer-2">
                        <div className="absolute right-1/4 top-1/3 w-20 h-20 rounded-full border border-blue-500/10"></div>
                        <div className="absolute left-1/3 bottom-1/4 w-14 h-14 rounded-full border border-indigo-500/10"></div>
                    </div>
                </div>
            </div>

            <div className="container mx-auto px-6 relative z-10">
                <div className="mb-16 text-center">
                    <div className="inline-flex items-center justify-center space-x-3 mb-8">
                        <span className="h-px w-8 bg-gradient-to-r from-transparent via-blue-500 to-transparent"></span>
                        <h2 className="text-4xl md:text-6xl font-bold text-center text-gradient">HOW USDH WORKS</h2>
                        <span className="h-px w-8 bg-gradient-to-r from-transparent via-blue-500 to-transparent"></span>
                    </div>
                    <p className="text-xl text-gray-400 max-w-2xl mx-auto">
                        The USDH ecosystem operates through four interconnected layers:
                    </p>
                </div>

                {/* 交互式层级展示 */}
                <div className="grid grid-cols-1 md:grid-cols-12 gap-8 mb-12">
                    <div className="md:col-span-4">
                        <div className="sticky top-24">
                            <div className="flex flex-col space-y-3">
                                {layers.map((layer, index) => (
                                    <button
                                        key={layer.id}
                                        className={`
                                            text-left px-6 py-4 rounded-lg flex items-center border transition-all duration-300
                                            ${isVisible ? 'opacity-100 translate-x-0' : 'opacity-0 -translate-x-10'} 
                                            ${activeLayer === index
                                                ? `${layer.color === 'blue' ? 'bg-blue-900/20 border-blue-500/40 shadow-glow-blue'
                                                    : layer.color === 'cyan' ? 'bg-cyan-900/20 border-cyan-500/40'
                                                        : layer.color === 'indigo' ? 'bg-indigo-900/20 border-indigo-500/40'
                                                            : 'bg-purple-900/20 border-purple-500/40'}`
                                                : 'bg-gray-900/30 border-gray-800 hover:bg-gray-900/50'
                                            }
                                        `}
                                        style={{ transitionDelay: `${index * 100}ms` }}
                                        onClick={() => setActiveLayer(index)}
                                    >
                                        <div className={`
                                            w-8 h-8 rounded-full mr-4 flex items-center justify-center text-sm font-bold
                                            ${activeLayer === index
                                                ? `${layer.color === 'blue' ? 'bg-blue-500/20 text-blue-400'
                                                    : layer.color === 'cyan' ? 'bg-cyan-500/20 text-cyan-400'
                                                        : layer.color === 'indigo' ? 'bg-indigo-500/20 text-indigo-400'
                                                            : 'bg-purple-500/20 text-purple-400'}`
                                                : 'bg-gray-800 text-gray-400'
                                            }
                                        `}>
                                            {layer.id}
                                        </div>
                                        <div>
                                            <h3 className="font-medium mb-1">{layer.name}</h3>
                                            {activeLayer === index && (
                                                <p className="text-sm text-gray-400 mt-2 animate-fadeIn">
                                                    {layer.description}
                                                </p>
                                            )}
                                        </div>
                                    </button>
                                ))}
                            </div>
                        </div>
                    </div>

                    <div className="md:col-span-8 relative">
                        {/* 分层示意图 */}
                        <div className={`relative aspect-video bg-black/50 rounded-lg border border-gray-800 backdrop-blur-sm p-6 overflow-hidden 
                            ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'} 
                            transition-all duration-700 delay-200`}
                        >
                            {/* 图层展示区域 */}
                            <div className="absolute inset-0 overflow-hidden">
                                {/* 资源层 */}
                                <div className={`absolute inset-x-0 bottom-0 h-1/4 bg-gradient-to-t from-blue-900/20 to-blue-800/5 border-t border-blue-500/20
                                    transform transition-all duration-500 ease-in-out
                                    ${activeLayer === 0 ? 'scale-y-110 opacity-100' : 'scale-y-100 opacity-40'}
                                `}>
                                    <div className="absolute inset-0 flex items-center justify-center opacity-20">
                                        <div className="grid grid-cols-10 gap-1 w-full h-full">
                                            {Array.from({ length: 50 }).map((_, i) => (
                                                <div key={i} className="aspect-square bg-blue-500/10 rounded-sm"></div>
                                            ))}
                                        </div>
                                    </div>
                                </div>

                                {/* 验证层 */}
                                <div className={`absolute inset-x-0 bottom-1/4 h-1/4 bg-gradient-to-t from-cyan-900/20 to-cyan-800/5 border-t border-cyan-500/20
                                    transform transition-all duration-500 ease-in-out
                                    ${activeLayer === 1 ? 'scale-y-110 opacity-100' : 'scale-y-100 opacity-40'}
                                `}>
                                    <div className="absolute inset-0 flex items-center justify-center opacity-20">
                                        <svg className="w-full h-24" viewBox="0 0 100 24">
                                            <path d="M0,12 L100,12" stroke="rgba(56, 189, 248, 0.3)" strokeWidth="0.5" strokeDasharray="4 2" />
                                            <path d="M10,6 L90,18" stroke="rgba(56, 189, 248, 0.2)" strokeWidth="0.5" />
                                            <path d="M10,18 L90,6" stroke="rgba(56, 189, 248, 0.2)" strokeWidth="0.5" />
                                        </svg>
                                    </div>
                                </div>

                                {/* 协议层 */}
                                <div className={`absolute inset-x-0 bottom-2/4 h-1/4 bg-gradient-to-t from-indigo-900/20 to-indigo-800/5 border-t border-indigo-500/20
                                    transform transition-all duration-500 ease-in-out
                                    ${activeLayer === 2 ? 'scale-y-110 opacity-100' : 'scale-y-100 opacity-40'}
                                `}>
                                    <div className="absolute inset-0 flex items-center justify-center opacity-20">
                                        name: "NodeStream",
                                        logo: "/partners/nodestream.svg",
                                        category: "infrastructure"
        },
                                        {
                                            name: "CloudPower",
                                        logo: "/partners/cloudpower.svg",
                                        category: "infrastructure"
        },
                                        {
                                            name: "FinBlock",
                                        logo: "/partners/finblock.svg",
                                        category: "defi"
        }
                                        ];

                                        const [activeFilter, setActiveFilter] = useState("all");

                                        const filteredPartners = activeFilter === "all"
                                        ? partners
        : partners.filter(partner => partner.category === activeFilter);

                                        return (
                                        <section className="py-20 bg-gradient-to-b from-blue-950/20 to-black relative">
                                            {/* Background effect */}
                                            <div className="absolute top-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-blue-500/50 to-transparent"></div>

                                            <div className="container mx-auto px-6">
                                                <h2 className="text-3xl md:text-5xl font-bold mb-6 text-center">Trusted Partners</h2>
                                                <p className="text-gray-400 text-center max-w-2xl mx-auto mb-12">
                                                    USDH collaborates with industry leaders in blockchain, infrastructure, and DeFi to build the future of compute-backed stablecoins.
                                                </p>

                                                {/* Category filters */}
                                                <div className="flex justify-center gap-4 mb-12">
                                                    <button
                                                        onClick={() => setActiveFilter("all")}
                                                        className={`px-4 py-2 rounded-full text-sm transition-all ${activeFilter === "all"
                                                            ? "bg-blue-500/20 text-blue-400 border border-blue-500/40"
                                                            : "text-gray-400 hover:text-white border border-gray-800 hover:border-gray-700"
                                                            }`}
                                                    >
                                                        All Partners
                                                    </button>
                                                    <button
                                                        onClick={() => setActiveFilter("blockchain")}
                                                        className={`px-4 py-2 rounded-full text-sm transition-all ${activeFilter === "blockchain"
                                                            ? "bg-blue-500/20 text-blue-400 border border-blue-500/40"
                                                            : "text-gray-400 hover:text-white border border-gray-800 hover:border-gray-700"
                                                            }`}
                                                    >
                                                        Blockchain
                                                    </button>
                                                    <button
                                                        onClick={() => setActiveFilter("infrastructure")}
                                                        className={`px-4 py-2 rounded-full text-sm transition-all ${activeFilter === "infrastructure"
                                                            ? "bg-blue-500/20 text-blue-400 border border-blue-500/40"
                                                            : "text-gray-400 hover:text-white border border-gray-800 hover:border-gray-700"
                                                            }`}
                                                    >
                                                        Infrastructure
                                                    </button>
                                                    <button
                                                        onClick={() => setActiveFilter("defi")}
                                                        className={`px-4 py-2 rounded-full text-sm transition-all ${activeFilter === "defi"
                                                            ? "bg-blue-500/20 text-blue-400 border border-blue-500/40"
                                                            : "text-gray-400 hover:text-white border border-gray-800 hover:border-gray-700"
                                                            }`}
                                                    >
                                                        DeFi
                                                    </button>
                                                </div>

                                                {/* Partners grid */}
                                                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8">
                                                    {filteredPartners.map((partner, index) => (
                                                        <div
                                                            key={index}
                                                            className="bg-gray-900/30 backdrop-blur-sm rounded-lg p-6 flex items-center justify-center border border-gray-800 hover:border-blue-500/30 transition-all hover:shadow-glow group"
                                                        >
                                                            {/* Placeholder for partner logos */}
                                                            <div className="h-16 w-full flex items-center justify-center relative">
                                                                <div className="text-gray-400 group-hover:text-white transition-colors text-center font-medium">
                                                                    {partner.name}
                                                                </div>
                                                                {/* For real implementation, uncomment and use actual logo images */}
                                                                {/* <Image 
                                    src={partner.logo} 
                                    alt={partner.name} 
                                    layout="fill" 
                                    objectFit="contain"
                                    className="transition-opacity filter grayscale hover:grayscale-0"
                                /> */}
                                                            </div>
                                                        </div>
                                                    ))}
                                                </div>

                                                {/* Call to action */}
                                                <div className="mt-16 text-center">
                                                    <a href="#" className="inline-flex items-center text-blue-400 hover:text-blue-300 transition-colors">
                                                        Become a partner
                                                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                                                            <path fillRule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clipRule="evenodd" />
                                                        </svg>
                                                    </a>
                                                </div>
                                            </div>
                                        </section>
                                        );
};

const FeaturesSection = () => (
                                        <section id="features" className="py-20 bg-gradient-to-b from-black to-blue-950/20">
                                            <div className="container mx-auto px-6">
                                                <h2 className="text-3xl md:text-5xl font-bold mb-12 text-center">FEATURES</h2>

                                                <div className="space-y-12">
                                                    <div>
                                                        <h3 className="text-2xl font-bold mb-6 text-blue-400">USDH STABLECOIN</h3>
                                                        <div className="bg-gray-900/30 backdrop-blur-sm p-8 rounded-lg border border-gray-800">
                                                            <ul className="list-disc list-inside space-y-2 text-gray-300">
                                                                <li>1:1 USD pegged stablecoin</li>
                                                                <li>Backed by verifiable compute resources</li>
                                                                <li>Overcollateralized for stability</li>
                                                                <li>Transparent reserve management</li>
                                                                <li>Low transaction fees</li>
                                                            </ul>
                                                        </div>
                                                    </div>

                                                    <div>
                                                        <h3 className="text-2xl font-bold mb-6 text-cyan-400">FUND UNITS</h3>
                                                        <div className="bg-gray-900/30 backdrop-blur-sm p-8 rounded-lg border border-gray-800">
                                                            <ul className="list-disc list-inside space-y-2 text-gray-300">
                                                                <li>Programmable treasury management</li>
                                                                <li>Customizable flow controls</li>
                                                                <li>Multi-signature authorization</li>
                                                                <li>On-chain privacy protection</li>
                                                                <li>Cross-chain asset support</li>
                                                            </ul>
                                                        </div>
                                                    </div>

                                                    <div>
                                                        <h3 className="text-2xl font-bold mb-6 text-purple-400">COMPUTE MARKET</h3>
                                                        <div className="bg-gray-900/30 backdrop-blur-sm p-8 rounded-lg border border-gray-800">
                                                            <ul className="list-disc list-inside space-y-2 text-gray-300">
                                                                <li>Decentralized compute resource marketplace</li>
                                                                <li>Real-time resource pricing and availability</li>
                                                                <li>Automated matching and allocation</li>
                                                                <li>Performance-based rating system</li>
                                                                <li>Flexible rental terms</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>
                                        );

const RoadmapSection = () => {
    const [activePhase, setActivePhase] = useState(0);

                                        // Phases timeline data
                                        const phases = [
                                        {
                                            title: "PHASE 1: FOUNDATION",
                                        period: "2025 Q1-Q2",
                                        description: "Building the core infrastructure and technology foundation for USDH",
                                        milestones: [
                                        "Develop zero-knowledge proof core contract system",
                                        "Build cross-platform node client",
                                        "Establish initial oracle and validator networks"
                                        ],
                                        status: "current",
                                        color: "blue",
                                        progress: 15
        },
                                        {
                                            title: "PHASE 2: VALIDATION NETWORK",
                                        period: "2025 Q3-Q4",
                                        description: "Expanding the validation network and implementing fund units",
                                        milestones: [
                                        "Deploy testnet and recruit early compute providers",
                                        "Implement basic fund unit functionality and ZK auditing",
                                        "Complete comprehensive security audits and formal verification"
                                        ],
                                        status: "upcoming",
                                        color: "cyan",
                                        progress: 0
        },
                                        {
                                            title: "PHASE 3: MAINNET LAUNCH",
                                        period: "2026",
                                        description: "Full mainnet deployment and ecosystem expansion",
                                        milestones: [
                                        "Deploy mainnet",
                                        "Implement cross-chain asset integration",
                                        "Establish decentralized governance",
                                        "Expand ecosystem and use cases"
                                        ],
                                        status: "upcoming",
                                        color: "purple",
                                        progress: 0
        }
                                        ];

                                        return (
                                        <section id="roadmap" className="py-20 bg-gradient-to-b from-blue-950/20 to-black relative">
                                            {/* Background grid pattern */}
                                            <div className="absolute inset-0 grid-pattern opacity-10"></div>

                                            <div className="container mx-auto px-6 relative z-10">
                                                <h2 className="text-3xl md:text-5xl font-bold mb-12 text-center">ROADMAP</h2>

                                                {/* Interactive Timeline */}
                                                <div className="relative max-w-4xl mx-auto mb-16">
                                                    {/* Timeline line */}
                                                    <div className="absolute top-10 left-0 right-0 h-1 bg-gray-700"></div>

                                                    {/* Timeline points */}
                                                    <div className="flex justify-between items-start relative">
                                                        {phases.map((phase, index) => (
                                                            <div
                                                                key={index}
                                                                className="relative flex flex-col items-center cursor-pointer group"
                                                                onClick={() => setActivePhase(index)}
                                                            >
                                                                {/* Phase dot */}
                                                                <div
                                                                    className={`w-6 h-6 rounded-full z-10 transition-all duration-300 flex items-center justify-center
                                ${index === activePhase
                                                                            ? `bg-${phase.color}-500 shadow-glow`
                                                                            : index < activePhase
                                                                                ? 'bg-gray-500'
                                                                                : 'bg-gray-700'}`}
                                                                >
                                                                    {index < activePhase && (
                                                                        <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                                                                            <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                                                                        </svg>
                                                                    )}
                                                                </div>

                                                                {/* Phase title */}
                                                                <div className="mt-4 w-32 text-center">
                                                                    <div className={`text-xs font-semibold transition-colors duration-300 ${index === activePhase ? `text-${phase.color}-400` : 'text-gray-500'}`}>
                                                                        PHASE {index + 1}
                                                                    </div>
                                                                    <div className={`text-xs transition-colors duration-300 ${index === activePhase ? 'text-gray-300' : 'text-gray-600'}`}>
                                                                        {phase.period}
                                                                    </div>
                                                                </div>

                                                                {/* Indicator for current phase */}
                                                                {phase.status === 'current' && (
                                                                    <div className="absolute -top-6 left-1/2 transform -translate-x-1/2 text-xs text-blue-400 whitespace-nowrap font-medium">
                                                                        CURRENT
                                                                    </div>
                                                                )}

                                                                {/* Hover tooltip */}
                                                                <div className="absolute top-16 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none">
                                                                    <div className="bg-gray-900/90 backdrop-blur-sm text-white text-xs p-2 rounded shadow-md border border-gray-700 whitespace-nowrap">
                                                                        {phase.title}
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        ))}
                                                    </div>
                                                </div>

                                                {/* Phase Details */}
                                                <div className="max-w-4xl mx-auto mb-16">
                                                    <div
                                                        className={`bg-gray-900/30 backdrop-blur-sm p-8 rounded-lg border border-${phases[activePhase].color}-500/50 transition-all duration-500 shadow-inner-glow`}
                                                    >
                                                        <div className="flex flex-col md:flex-row md:items-center justify-between mb-6">
                                                            <div>
                                                                <h3 className={`text-xl font-bold mb-2 text-${phases[activePhase].color}-400`}>
                                                                    {phases[activePhase].title}
                                                                </h3>
                                                                <p className="text-gray-400 text-sm">{phases[activePhase].period}</p>
                                                            </div>
                                                            <div className="mt-4 md:mt-0">
                                                                <span className={`bg-${phases[activePhase].color}-500/20 text-${phases[activePhase].color}-400 text-xs py-1 px-3 rounded-full uppercase font-medium`}>
                                                                    {phases[activePhase].status}
                                                                </span>
                                                            </div>
                                                        </div>

                                                        <p className="text-gray-300 mb-6">
                                                            {phases[activePhase].description}
                                                        </p>

                                                        <div className="mb-6">
                                                            <h4 className="text-white text-sm font-medium mb-3">KEY MILESTONES</h4>
                                                            <ul className="space-y-3">
                                                                {phases[activePhase].milestones.map((milestone, idx) => (
                                                                    <li key={idx} className="flex items-center">
                                                                        <div className={`w-2 h-2 rounded-full bg-${phases[activePhase].color}-500 mr-3 flex-shrink-0`}></div>
                                                                        <span className="text-gray-300">{milestone}</span>
                                                                    </li>
                                                                ))}
                                                            </ul>
                                                        </div>

                                                        {phases[activePhase].progress > 0 && (
                                                            <div>
                                                                <div className="flex justify-between items-center mb-2">
                                                                    <span className="text-xs text-gray-500">PROGRESS</span>
                                                                    <span className={`text-${phases[activePhase].color}-400 text-xs font-medium`}>
                                                                        {phases[activePhase].progress}%
                                                                    </span>
                                                                </div>
                                                                <div className="w-full h-2 bg-gray-800 rounded-full overflow-hidden">
                                                                    <div
                                                                        className={`h-full bg-gradient-to-r from-${phases[activePhase].color}-600 to-${phases[activePhase].color}-400 rounded-full transition-all duration-1000 ease-out`}
                                                                        style={{ width: `${phases[activePhase].progress}%` }}
                                                                    ></div>
                                                                </div>
                                                            </div>
                                                        )}
                                                    </div>
                                                </div>

                                                {/* Overall Progress */}
                                                <div className="max-w-3xl mx-auto">
                                                    <p className="text-sm text-gray-400 mb-4 flex justify-between">
                                                        <span>Project Progress:</span>
                                                        <span className="font-medium">15% Complete</span>
                                                    </p>
                                                    <div className="w-full h-3 bg-gray-800 rounded-full overflow-hidden glass-dark">
                                                        <div className="h-full bg-gradient-to-r from-blue-600 to-blue-400 rounded-full shimmer" style={{ width: '15%' }}></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>
                                        )
};

const Footer = () => (
                                        <footer className="pt-16 pb-8 bg-black border-t border-gray-800">
                                            <div className="container mx-auto px-6">
                                                {/* Newsletter Subscription */}
                                                <div className="max-w-4xl mx-auto mb-16 bg-gradient-to-r from-gray-900/80 to-blue-900/20 rounded-lg p-8 backdrop-blur-sm border border-gray-800">
                                                    <div className="flex flex-col md:flex-row md:items-center justify-between">
                                                        <div className="mb-6 md:mb-0 md:mr-8">
                                                            <h3 className="text-xl font-bold text-white mb-2">Stay Updated</h3>
                                                            <p className="text-gray-400 max-w-md">Subscribe to receive updates about USDH development, new features, and ecosystem news.</p>
                                                        </div>
                                                        <div className="flex-1 min-w-0 max-w-md">
                                                            <form className="flex">
                                                                <input
                                                                    type="email"
                                                                    placeholder="Your email address"
                                                                    className="flex-grow min-w-0 px-4 py-2 bg-gray-800/70 border border-gray-700 rounded-l-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-gray-300"
                                                                />
                                                                <button
                                                                    type="submit"
                                                                    className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-r-md transition-colors font-medium text-sm whitespace-nowrap"
                                                                >
                                                                    Subscribe
                                                                </button>
                                                            </form>
                                                            <div className="mt-2 flex items-center">
                                                                <input type="checkbox" id="gdpr-consent" className="mr-2" />
                                                                <label htmlFor="gdpr-consent" className="text-xs text-gray-500">I agree to receive marketing communications from USDH</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                {/* Main Footer Content */}
                                                <div className="grid grid-cols-1 md:grid-cols-4 gap-8 mb-12">
                                                    <div>
                                                        <div className="font-blanka text-2xl text-white tracking-wider mb-4">USDH</div>
                                                        <p className="text-gray-400 text-sm mb-6">The world's first stablecoin collateralized by distributed computing resources.</p>
                                                        <div className="flex space-x-4">
                                                            <a href="#" className="text-gray-400 hover:text-white transition-colors" aria-label="Github">
                                                                <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                                    <path fillRule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clipRule="evenodd" />
                                                                </svg>
                                                            </a>
                                                            <a href="#" className="text-gray-400 hover:text-white transition-colors" aria-label="Twitter">
                                                                <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                                    <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                                                                </svg>
                                                            </a>
                                                            <a href="#" className="text-gray-400 hover:text-white transition-colors" aria-label="Discord">
                                                                <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                                    <path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.946 2.4189-2.1568 2.4189Z" />
                                                                </svg>
                                                            </a>
                                                            <a href="#" className="text-gray-400 hover:text-white transition-colors" aria-label="Telegram">
                                                                <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                                    <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.244-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z" />
                                                                </svg>
                                                            </a>
                                                        </div>
                                                    </div>

                                                    <div>
                                                        <h3 className="text-sm font-semibold text-white uppercase tracking-wider mb-4">Learn</h3>
                                                        <ul className="space-y-2">
                                                            <li><a href="#about" className="text-gray-400 hover:text-white transition-colors">About USDH</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Whitepaper</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Technology</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Use Cases</a></li>
                                                        </ul>
                                                    </div>

                                                    <div>
                                                        <h3 className="text-sm font-semibold text-white uppercase tracking-wider mb-4">Build</h3>
                                                        <ul className="space-y-2">
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Developer Portal</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Documentation</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">GitHub</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">API</a></li>
                                                        </ul>
                                                    </div>

                                                    <div>
                                                        <h3 className="text-sm font-semibold text-white uppercase tracking-wider mb-4">Community</h3>
                                                        <ul className="space-y-2">
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Governance</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Forum</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Events</a></li>
                                                            <li><a href="#" className="text-gray-400 hover:text-white transition-colors">FAQ</a></li>
                                                        </ul>
                                                    </div>
                                                </div>

                                                {/* Bottom Links */}
                                                <div className="pt-8 mt-8 border-t border-gray-800 flex flex-col md:flex-row justify-between items-center">
                                                    <div className="mb-4 md:mb-0">
                                                        <p className="text-gray-500 text-sm">© 2025 USDH. All rights reserved.</p>
                                                    </div>
                                                    <div className="flex flex-wrap justify-center gap-4 md:gap-8">
                                                        <a href="#" className="text-gray-500 hover:text-gray-400 text-sm">Privacy Policy</a>
                                                        <a href="#" className="text-gray-500 hover:text-gray-400 text-sm">Terms of Service</a>
                                                        <a href="#" className="text-gray-500 hover:text-gray-400 text-sm">Trademark Policy</a>
                                                        <a href="#" className="text-gray-500 hover:text-gray-400 text-sm">Security</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </footer>
                                        );

                                        export default function MainPage() {
                                            // 使用自定义的滚动动画钩子
                                            useScrollReveal();

                                        // 基本淡入效果
                                        const [visible, setVisible] = useState(false);
                                        const sectionsRef = useRef<HTMLDivElement>(null);

    useEffect(() => {
                                                setVisible(true);
    }, []);

                                            return (
                                            <main className={`min-h-screen transition-opacity duration-1000 ${visible ? 'opacity-100' : 'opacity-0'}`} ref={sectionsRef}>
                                                {/* Digital Rain Background */}
                                                <DigitalRain />

                                                <Navbar />

                                                <HeroSection />

                                                <div className="fade-in-section">
                                                    <MetricsSection />
                                                </div>

                                                <div className="fade-in-section">
                                                    <AboutSection />
                                                </div>

                                                <div className="fade-in-section">
                                                    <PartnersSection />
                                                </div>

                                                <div className="fade-in-section">
                                                    <HowItWorksSection />
                                                </div>

                                                <div className="fade-in-section">
                                                    <FeaturesSection />
                                                </div>

                                                <div className="fade-in-section">
                                                    <RoadmapSection />
                                                </div>

                                                <Footer />
                                            </main>
                                            );
} 